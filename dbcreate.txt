CREATE DATABASE IF NOT EXISTS imdb_clone CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE imdb_clone;

CREATE TABLE privileges (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

INSERT INTO privileges (name) VALUES ('admin'), ('user');

CREATE TABLE people (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE movies (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    description TEXT,
    runtime INT,
    poster_path VARCHAR(255) NULL,
    director_id INT,
    FOREIGN KEY (director_id) REFERENCES people(id) ON DELETE SET NULL
);

CREATE TABLE genres (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE movie_genres (
    movie_id INT NOT NULL,
    genre_id INT NOT NULL,
    PRIMARY KEY (movie_id, genre_id),
    FOREIGN KEY (movie_id) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE
);

CREATE TABLE movie_people (
    id INT AUTO_INCREMENT PRIMARY KEY,
    movie_id INT NOT NULL,
    person_id INT NOT NULL,
    job VARCHAR(50) NOT NULL,
    FOREIGN KEY (movie_id) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (person_id) REFERENCES people(id) ON DELETE CASCADE
);

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    privilege_id INT NOT NULL DEFAULT 2,
    FOREIGN KEY (privilege_id) REFERENCES privileges(id)
);

INSERT INTO users (name, username, password, email, privilege_id) VALUES
('Admin User', 'admin', '$2y$10$vK6P7HqP7P5L5S8V7R4R4Q6W3M9L6C8B5X1Y7Z2A0/d2a3e4f5g6h7i8j9k0l1m2n3o4p5q6r7s8t9u0v1w2x3y4z5a6b7c8d9e0f1g2h3i4j', 'admin@example.com', 1),
('Regular User', 'user', '$2y$10$vK6P7HqP7P5L5S8V7R4R4Q6W3M9L6C8B5X1Y7Z2A0/d2a3e4f5g6h7i8j9k0l1m2n3o4p5q6r7s8t9u0v1w2x3y4z5a6b7c8d9e0f1g2h3i4j', 'user@example.com', 2);

CREATE TABLE activity_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NULL,
    username VARCHAR(255) NULL,
    ip_address VARCHAR(45) NOT NULL,
    page_visited VARCHAR(255) NOT NULL,
    request_method VARCHAR(10) NOT NULL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    user_agent TEXT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

INSERT INTO people (name, birth_year) VALUES
('Quentin Tarantino', 1963),
('Christopher Nolan', 1970),
('Alfred Hitchcock', 1899),
('Steven Spielberg', 1946),
('Leonardo DiCaprio', 1974),
('Uma Thurman', 1970),
('Christian Bale', 1974),
('Joseph Gordon-Levitt', 1981),
('Jeff Goldblum', 1952),
('Sam Neill', 1947),
('Laura Dern', 1967),
('Anthony Perkins', 1932),
('Janet Leigh', 1927),
('John Travolta', 1954),
('Samuel L. Jackson', 1948),
('Bruce Willis', 1955),
('Uma Thurman', 1970),
('Keanu Reeves', 1964),
('Laurence Fishburne', 1961),
('Carrie-Anne Moss', 1967),
('Elijah Wood', 1981),
('Ian McKellen', 1939),
('Viggo Mortensen', 1958),
('Orlando Bloom', 1977);


INSERT INTO movies (title, release_date, description, runtime, director_id) VALUES
('Pulp Fiction', '1994-10-14', 'The lives of two mob hitmen, a boxer, a gangster\'s wife, and a pair of diner bandits intertwine in four tales of violence and redemption.', 154, (SELECT id FROM people WHERE name = 'Quentin Tarantino')),
('Inception', '2010-07-16', 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.', 148, (SELECT id FROM people WHERE name = 'Christopher Nolan')),
('The Lord of the Rings: The Fellowship of the Ring', '2001-12-19', 'A young hobbit, Frodo Baggins, inherits a magical ring that he must destroy to save Middle-earth from the Dark Lord Sauron.', 178, NULL),
('The Matrix', '1999-03-31', 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.', 136, NULL),
('Psycho', '1960-09-08', 'A Phoenix secretary embezzles $40,000 from her employer, goes on the run, and checks into a remote motel run by a disturbed young man.', 109, (SELECT id FROM people WHERE name = 'Alfred Hitchcock')),
('Jurassic Park', '1993-06-11', 'A pragmatic paleontologist touring an almost complete theme park on an island in Central America is tasked with protecting a couple of kids after a power failure causes the park\'s cloned dinosaurs to run loose.', 127, (SELECT id FROM people WHERE name = 'Steven Spielberg')),
('Interstellar', '2014-11-07', 'A team of explorers travel through a wormhole in space in an attempt to ensure humanity\'s survival.', 169, (SELECT id FROM people WHERE name = 'Christopher Nolan')),
('Django Unchained', '2012-12-25', 'With the help of a German bounty hunter, a freed slave sets out to rescue his wife from a brutal Mississippi plantation owner.', 165, (SELECT id FROM people WHERE name = 'Quentin Tarantino'));


INSERT INTO genres (name) VALUES
('Action'),
('Crime'),
('Drama'),
('Sci-Fi'),
('Thriller'),
('Horror'),
('Mystery'),
('Adventure'),
('Western'),
('Fantasy');

INSERT INTO movie_genres (movie_id, genre_id) VALUES
((SELECT id FROM movies WHERE title = 'Pulp Fiction'), (SELECT id FROM genres WHERE name = 'Crime')),
((SELECT id FROM movies WHERE title = 'Pulp Fiction'), (SELECT id FROM genres WHERE name = 'Drama')),

((SELECT id FROM movies WHERE title = 'Inception'), (SELECT id FROM genres WHERE name = 'Action')),
((SELECT id FROM movies WHERE title = 'Inception'), (SELECT id FROM genres WHERE name = 'Sci-Fi')),
((SELECT id FROM movies WHERE title = 'Inception'), (SELECT id FROM genres WHERE name = 'Adventure')),

((SELECT id FROM movies WHERE title = 'The Lord of the Rings: The Fellowship of the Ring'), (SELECT id FROM genres WHERE name = 'Fantasy')),
((SELECT id FROM movies WHERE title = 'The Lord of the Rings: The Fellowship of the Ring'), (SELECT id FROM genres WHERE name = 'Adventure') ),
((SELECT id FROM movies WHERE title = 'The Lord of the Rings: The Fellowship of the Ring'), (SELECT id FROM genres WHERE name = 'Drama')),

((SELECT id FROM movies WHERE title = 'The Matrix'), (SELECT id FROM genres WHERE name = 'Sci-Fi')),
((SELECT id FROM movies WHERE title = 'The Matrix'), (SELECT id FROM genres WHERE name = 'Action')),

((SELECT id FROM movies WHERE title = 'Psycho'), (SELECT id FROM genres WHERE name = 'Horror')),
((SELECT id FROM movies WHERE title = 'Psycho'), (SELECT id FROM genres WHERE name = 'Thriller')),
((SELECT id FROM movies WHERE title = 'Psycho'), (SELECT id FROM genres WHERE name = 'Mystery')),

((SELECT id FROM movies WHERE title = 'Jurassic Park'), (SELECT id FROM genres WHERE name = 'Sci-Fi')),
((SELECT id FROM movies WHERE title = 'Jurassic Park'), (SELECT id FROM genres WHERE name = 'Adventure')),

((SELECT id FROM movies WHERE title = 'Interstellar'), (SELECT id FROM genres WHERE name = 'Sci-Fi')),
((SELECT id FROM movies WHERE title = 'Interstellar'), (SELECT id FROM genres WHERE name = 'Drama')),
((SELECT id FROM movies WHERE title = 'Interstellar'), (SELECT id FROM genres WHERE name = 'Adventure')),

((SELECT id FROM movies WHERE title = 'Django Unchained'), (SELECT id FROM genres WHERE name = 'Drama')),
((SELECT id FROM movies WHERE title = 'Django Unchained'), (SELECT id FROM genres WHERE name = 'Western'));